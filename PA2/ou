./lexer test.cl
#name "test.cl"
 models one-dimensional cellular automaton on a circle of finite radius
   arrays are faked as Strings,
   X's respresent live cells, dots represent dead cells,
   no error checking is done #3 '-'
#3 '-'
#3 TYPEID Is
 #3 OBJECTID this
 #3 OBJECTID a
 #3 OBJECTID comment
#6 CLASS
 #6 TYPEID CellularAutomaton
 #6 INHERITS
 #6 TYPEID IO
 #6 '{'
    #7 OBJECTID population_map
 #7 ':'
 #7 TYPEID String
#7 ';'
       #9 OBJECTID init
#9 '('
#9 OBJECTID map
 #9 ':'
 #9 TYPEID String
#9 ')'
 #9 ':'
 #9 TYPEID SELF_TYPE
 #9 '{'
        #10 '{'
            #11 OBJECTID population_map
 #11 ASSIGN
 #11 OBJECTID map
#11 ';'
            #12 OBJECTID self
#12 ';'
        #13 '}'
    #14 '}'
#14 ';'
       #16 OBJECTID print
#16 '('
#16 ')'
 #16 ':'
 #16 TYPEID SELF_TYPE
 #16 '{'
        #17 '{'
            #18 OBJECTID out_string
#18 '('
#18 OBJECTID population_map
#18 '.'
#18 OBJECTID concat
#18 '('
"\#18 OBJECTID n
"#18 ')'
#18 ')'
#18 ';'
            #19 OBJECTID self
#19 ';'
        #20 '}'
    #21 '}'
#21 ';'
       #23 OBJECTID num_cells
#23 '('
#23 ')'
 #23 ':'
 #23 TYPEID Int
 #23 '{'
        #24 OBJECTID population_map
#24 '.'
#24 OBJECTID length
#24 '('
#24 ')'
    #25 '}'
#25 ';'
       #27 OBJECTID cell
#27 '('
#27 OBJECTID position
 #27 ':'
 #27 TYPEID Int
#27 ')'
 #27 ':'
 #27 TYPEID String
 #27 '{'
        #28 OBJECTID population_map
#28 '.'
#28 OBJECTID substr
#28 '('
#28 OBJECTID position
#28 ','
 #28 INT_CONST 1
#28 ')'
    #29 '}'
#29 ';'
       #31 OBJECTID cell_left_neighbor
#31 '('
#31 OBJECTID position
 #31 ':'
 #31 TYPEID Int
#31 ')'
 #31 ':'
 #31 TYPEID String
 #31 '{'
        #32 OBJECTID if
 #32 OBJECTID position
 #32 '='
 #32 INT_CONST 0
 #32 THEN
            #33 OBJECTID cell
#33 '('
#33 OBJECTID num_cells
#33 '('
#33 ')'
 #33 '-'
 #33 INT_CONST 1
#33 ')'
        #34 ELSE
            #35 OBJECTID cell
#35 '('
#35 OBJECTID position
 #35 '-'
 #35 INT_CONST 1
#35 ')'
        #36 FI
    #37 '}'
#37 ';'
       #39 OBJECTID cell_right_neighbor
#39 '('
#39 OBJECTID position
 #39 ':'
 #39 TYPEID Int
#39 ')'
 #39 ':'
 #39 TYPEID String
 #39 '{'
        #40 OBJECTID if
 #40 OBJECTID position
 #40 '='
 #40 OBJECTID num_cells
#40 '('
#40 ')'
 #40 '-'
 #40 INT_CONST 1
 #40 THEN
            #41 OBJECTID cell
#41 '('
#41 INT_CONST 0
#41 ')'
        #42 ELSE
            #43 OBJECTID cell
#43 '('
#43 OBJECTID position
 #43 '+'
 #43 INT_CONST 1
#43 ')'
        #44 FI
    #45 '}'
#45 ';'
        a cell will live if exactly 1 of itself and it's immediate
       neighbors are alive     #48 OBJECTID cell_at_next_evolution
#48 '('
#48 OBJECTID position
 #48 ':'
 #48 TYPEID Int
#48 ')'
 #48 ':'
 #48 TYPEID String
 #48 '{'
        #49 OBJECTID if
 #49 '('
#49 OBJECTID if
 #49 OBJECTID cell
#49 '('
#49 OBJECTID position
#49 ')'
 #49 '='
 "#49 TYPEID X
" #49 THEN
 #49 INT_CONST 1
 #49 ELSE
 #49 INT_CONST 0
 #49 FI
            #50 '+'
 #50 OBJECTID if
 #50 OBJECTID cell_left_neighbor
#50 '('
#50 OBJECTID position
#50 ')'
 #50 '='
 "#50 TYPEID X
" #50 THEN
 #50 INT_CONST 1
 #50 ELSE
 #50 INT_CONST 0
 #50 FI
            #51 '+'
 #51 OBJECTID if
 #51 OBJECTID cell_right_neighbor
#51 '('
#51 OBJECTID position
#51 ')'
 #51 '='
 "#51 TYPEID X
" #51 THEN
 #51 INT_CONST 1
 #51 ELSE
 #51 INT_CONST 0
 #51 FI
            #52 '='
 #52 INT_CONST 1
#52 ')'
        #53 THEN
            "#54 TYPEID X
"        #55 ELSE
            '#56 '.'
'        #57 FI
    #58 '}'
#58 ';'
       #60 OBJECTID evolve
#60 '('
#60 ')'
 #60 ':'
 #60 TYPEID SELF_TYPE
 #60 '{'
        #61 '('
#61 LET
 #61 OBJECTID position
 #61 ':'
 #61 TYPEID Int
 #61 IN
        #62 '('
#62 LET
 #62 OBJECTID num
 #62 ':'
 #62 TYPEID Int
 #62 ASSIGN
 #62 OBJECTID num_cells
[] #62 IN
        #63 '('
#63 LET
 #63 OBJECTID temp
 #63 ':'
 #63 TYPEID String
 #63 IN
            #64 '{'
                #65 OBJECTID while
 #65 OBJECTID position
 #65 '<'
 #65 OBJECTID num
 #65 LOOP
                    #66 '{'
                        #67 OBJECTID temp
 #67 ASSIGN
 #67 OBJECTID temp
#67 '.'
#67 OBJECTID concat
#67 '('
#67 OBJECTID cell_at_next_evolution
#67 '('
#67 OBJECTID position
#67 ')'
#67 ')'
#67 ';'
                        #68 OBJECTID position
 #68 ASSIGN
 #68 OBJECTID position
 #68 '+'
 #68 INT_CONST 1
#68 ';'
                    #69 '}'
                #70 POOL
#70 ';'
                #71 OBJECTID population_map
 #71 ASSIGN
 #71 OBJECTID temp
#71 ';'
                #72 OBJECTID self
#72 ';'
            #73 '}'
        #74 ')'
 #74 ')'
 #74 ')'
    #75 '}'
#75 ';'
#76 '}'
#76 ';'
#78 CLASS
 #78 TYPEID Main
 #78 '{'
    #79 OBJECTID cells
 #79 ':'
 #79 TYPEID CellularAutomaton
#79 ';'
       #81 OBJECTID main
#81 '('
#81 ')'
 #81 ':'
 #81 TYPEID SELF_TYPE
 #81 '{'
        #82 '{'
            #83 OBJECTID cells
 #83 ASSIGN
 #83 '('
#83 NEW
 #83 TYPEID CellularAutomaton
#83 ')'
#83 '.'
#83 OBJECTID init
#83 '('
"         #83 TYPEID X
         "#83 ')'
#83 ';'
            #84 OBJECTID cells
#84 '.'
#84 OBJECTID print
#84 '('
#84 ')'
#84 ';'
            #85 '('
#85 LET
 #85 OBJECTID countdown
 #85 ':'
 #85 TYPEID Int
 #85 ASSIGN
 #85 INT_CONST 20
 #85 IN
                #86 OBJECTID while
 #86 OBJECTID countdown
 > #86 INT_CONST 0
 #86 LOOP
                    #87 '{'
                        #88 OBJECTID cells
#88 '.'
#88 OBJECTID evolve
#88 '('
#88 ')'
#88 ';'
                        #89 OBJECTID cells
#89 '.'
#89 OBJECTID print
#89 '('
#89 ')'
#89 ';'
                        #90 OBJECTID countdown
 #90 ASSIGN
 #90 OBJECTID countdown
 #90 '-'
 #90 INT_CONST 1
#90 ';'
                                    #92 POOL
            #93 ')'
#93 ';'
   end let countdown
            self;
        }
    };
};
#93 ERROR "EOFin comment"
